"use strict";(self.webpackChunkstarlake_docs=self.webpackChunkstarlake_docs||[]).push([[5292],{3905:function(t,e,a){a.d(e,{Zo:function(){return u},kt:function(){return d}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),m=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},u=function(t){var e=m(t.components);return n.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},s=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),s=m(a),d=r,k=s["".concat(p,".").concat(d)]||s[d]||c[d]||l;return a?n.createElement(k,i(i({ref:e},u),{},{components:a})):n.createElement(k,i({ref:e},u))}));function d(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var m=2;m<l;m++)i[m]=a[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},721:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return m},default:function(){return c}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i={sidebar_position:110,title:"extract"},o=void 0,p={unversionedId:"cli/extract",id:"cli/extract",isDocsHomePage:!1,title:"extract",description:"Synopsis",source:"@site/docs/cli/extract.md",sourceDirName:"cli",slug:"/cli/extract",permalink:"/starlake/docs/cli/extract",editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/cli/extract.md",tags:[],version:"current",sidebarPosition:110,frontMatter:{sidebar_position:110,title:"extract"},sidebar:"cometSidebar",previous:{title:"ddl2yml",permalink:"/starlake/docs/cli/ddl2yml"},next:{title:"transform | job",permalink:"/starlake/docs/cli/transform"}},m=[{value:"Synopsis",id:"synopsis",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]}],u={toc:m};function c(t){var e=t.components,a=(0,r.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"comet extract ","[options]")),(0,l.kt)("h2",{id:"description"},"Description"),(0,l.kt)("p",null,"For domain extraction, the schemas should at least, specify :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"a table name (schemas.name)"),(0,l.kt)("li",{parentName:"ul"},"a file pattern (schemas.pattern) which is used as the export file base name"),(0,l.kt)("li",{parentName:"ul"},"a write mode (schemas.metadata.write): APPEND or OVERWRITE"),(0,l.kt)("li",{parentName:"ul"},"a delta column (schemas.merge.timestamp) if in APPEND mode : the default column which is used to determine new rows for each exports"),(0,l.kt)("li",{parentName:"ul"},"the columns to extract (schemas.attributes.name*)")),(0,l.kt)("p",null,"You also have to provide a Mustache (",(0,l.kt)("a",{parentName:"p",href:"http://mustache.github.io/mustache.5.html"},"http://mustache.github.io/mustache.5.html"),") template file."),(0,l.kt)("p",null,"In there you'll write your extraction export process (sqlplus for Oracle, pgsql for PostgreSQL as an example).\nIn that template you can use the following parameters:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"table_name  -> the table to export"),(0,l.kt)("li",{parentName:"ul"},"delimiter   -> the resulting dsv file delimiter"),(0,l.kt)("li",{parentName:"ul"},"columns     -> the columns to export\ncolumns is a Mustache map, it gives you access, for each column, to:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"name               -> the column name"),(0,l.kt)("li",{parentName:"ul"},'trailing_col_char  -> the separator to append to the column (, if there are more columns to come, "" otherwise)\nHere is an example how to use it in a template:')))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"                              SELECT\n                              {{#columns}}\n                              TO_CHAR({{name}}){{trailing_col_char}}\n                              {{/columns}}\n                              FROM\n                              {{table_name}};\n")),(0,l.kt)("p",null," export_file -> the export file name\nfull_export -> if the export is a full or delta export (the logic is to be implemented in your script)"),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Cardinality"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--script-gen:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--domain:",(0,l.kt)("inlineCode",{parentName:"td"},"domain1,domain2 ...")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"The domain list for which to generate extract scripts")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--job:",(0,l.kt)("inlineCode",{parentName:"td"},"job1,job2 ...")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"The jobs you want to load. use '*' to load all jobs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--templateFile:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Script template file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--scriptsOutputDir:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Scripts output folder")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--deltaColumn:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"The default date column used to determine new rows to export. Overrides config database-extractor.default-column value.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--scriptsOutputPattern:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Default output file pattern name",(0,l.kt)("br",null),"the following variables are allowed.",(0,l.kt)("br",null),"When applied to a domain:",(0,l.kt)("br",null),"  - {{domain}}: domain name",(0,l.kt)("br",null),"  - {{schema}}: Schema name",(0,l.kt)("br",null),"  By default : EXTRACT_{{schema}}.sql",(0,l.kt)("br",null),"When applied to a job:",(0,l.kt)("br",null),"  - {{job}}: job name",(0,l.kt)("br",null),"  By default: {{job}}.py",(0,l.kt)("br",null))))))}c.isMDXComponent=!0}}]);