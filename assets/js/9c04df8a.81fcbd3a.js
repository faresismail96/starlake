"use strict";(self.webpackChunkstarlake_docs=self.webpackChunkstarlake_docs||[]).push([[6744],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return c}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),p=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(d.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=p(a),c=r,k=u["".concat(d,".").concat(c)]||u[c]||s[c]||l;return a?n.createElement(k,i(i({ref:e},m),{},{components:a})):n.createElement(k,i({ref:e},m))}));function c(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4560:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return i},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return p},default:function(){return s}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i={sidebar_position:140,title:"kafkaload"},o=void 0,d={unversionedId:"cli/kafkaload",id:"cli/kafkaload",isDocsHomePage:!1,title:"kafkaload",description:"Synopsis",source:"@site/docs/cli/kafkaload.md",sourceDirName:"cli",slug:"/cli/kafkaload",permalink:"/starlake/docs/cli/kafkaload",editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/cli/kafkaload.md",tags:[],version:"current",sidebarPosition:140,frontMatter:{sidebar_position:140,title:"kafkaload"},sidebar:"cometSidebar",previous:{title:"watch",permalink:"/starlake/docs/cli/watch"},next:{title:"yml2xls",permalink:"/starlake/docs/cli/yml2xls"}},p=[{value:"Synopsis",id:"synopsis",children:[]},{value:"Description",id:"description",children:[{value:"Batch mode",id:"batch-mode",children:[]},{value:"Streaming mode",id:"streaming-mode",children:[]}]},{value:"Parameters",id:"parameters",children:[]}],m={toc:p};function s(t){var e=t.components,i=(0,r.Z)(t,["components"]);return(0,l.kt)("wrapper",(0,n.Z)({},m,i,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"synopsis"},"Synopsis"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"comet kafkaload ","[options]")),(0,l.kt)("h2",{id:"description"},"Description"),(0,l.kt)("p",null,"Two modes are available : The batch mode and the streaming mode."),(0,l.kt)("h3",{id:"batch-mode"},"Batch mode"),(0,l.kt)("p",null,"In batch mode, you start the kafka (off)loader regurarly and the last consumed offset\nwill be stored in the ",(0,l.kt)("inlineCode",{parentName:"p"},"comet_offsets")," topic config\n(see ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ebiznext/comet-data-pipeline/blob/master/src/main/resources/reference-kafka.conf#L22"},"reference-kafka.conf")," for an example)."),(0,l.kt)("p",null,"When offloading data from kafka to a file, you may ask to coalesce the result to a specific number of files / partitions.\nIf you ask to coalesce to a single partition, the offloader will store the data in the exact filename you provided in the path\nargument."),(0,l.kt)("p",null,"The figure below describes the batch offloading process\n",(0,l.kt)("img",{src:a(4521).Z})),(0,l.kt)("p",null,"The figure below describes the batch offloading process with ",(0,l.kt)("inlineCode",{parentName:"p"},'comet-offsets-mode = "FILE"'),"\n",(0,l.kt)("img",{src:a(407).Z})),(0,l.kt)("h3",{id:"streaming-mode"},"Streaming mode"),(0,l.kt)("p",null,"In this mode, te program keep running and you the comet_offsets topic is not used. The (off)loader will use a consumer group id\nyou specify in the access options of the topic configuration you are dealing with."),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Cardinality"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--topic:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Topic Name declared in reference.conf file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--format:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Read/Write format eq : parquet, json, csv ... Default to parquet.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--path:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Source file for load and target file for store")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--mode:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"When offload is true, describes how data should be stored on disk. Ignored if offload is false.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--write-options:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Options to pass to Spark Writer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--coalesce:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Should we coalesce the resulting dataframe")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--coalesce-merge:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Should we coalesce the resulting dataframe")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--transform:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Any transformation to apply to message before loading / offloading it")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--offload:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"If true, kafka topic is offloaded to path, else data contained in path is stored in the kafka topic")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--stream:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Optional")),(0,l.kt)("td",{parentName:"tr",align:null},"Should we use streaming mode ?")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--streaming-format:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Streaming format eq. kafka, console ...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--streaming-output-mode:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Output mode : eq. append ...")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--streaming-trigger:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Once / Continuous / ProcessingTime")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--streaming-trigger-option:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"10 seconds for example. see ",(0,l.kt)("a",{parentName:"td",href:"https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/streaming/Trigger.html#ProcessingTime-java.lang.String-"},"https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/streaming/Trigger.html#ProcessingTime-java.lang.String-"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--streaming-to-table:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"Table name to sink to")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"--streaming-partition-by:",(0,l.kt)("inlineCode",{parentName:"td"},"<value>")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"Required")),(0,l.kt)("td",{parentName:"tr",align:null},"List of columns to use for partitioning")))))}s.isMDXComponent=!0},407:function(t,e,a){e.Z=a.p+"assets/images/kafka-offload-fs-1b2743b81e76d7adc87e0195e2f8b4b4.png"},4521:function(t,e,a){e.Z=a.p+"assets/images/kafka-offload-f33e7634d7aa0e5a6038e74902d5edc7.png"}}]);