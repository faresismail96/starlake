"use strict";(self.webpackChunkstarlake_docs=self.webpackChunkstarlake_docs||[]).push([[8158],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(r),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5563:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),l={sidebar_position:2},o="Quick Start",s={unversionedId:"userguide/quickstart",id:"userguide/quickstart",isDocsHomePage:!1,title:"Quick Start",description:"The example in the folder `src/test/resources/quickstart` import into the cluster the following files:",source:"@site/docs/userguide/quickstart.md",sourceDirName:"userguide",slug:"/userguide/quickstart",permalink:"/starlake/docs/userguide/quickstart",editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/userguide/quickstart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"cometSidebar",previous:{title:"Introduction",permalink:"/starlake/docs/userguide/introduction"},next:{title:"Example",permalink:"/starlake/docs/userguide/sample"}},u=[{value:"Build it",id:"build-it",children:[]},{value:"Run it",id:"run-it",children:[]}],c={toc:u};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"quick-start"},"Quick Start"),(0,i.kt)("p",null,"The example in the folder ",(0,i.kt)("inlineCode",{parentName:"p"},"src/test/resources/quickstart")," import into the cluster the following files:"),(0,i.kt)("p",null,"From the sales department, customers and orders in delimiter separated files :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"customers and orders are appended to the previous imported data"),(0,i.kt)("li",{parentName:"ul"},"new orders are added"),(0,i.kt)("li",{parentName:"ul"},"updated orders replace existing ones"),(0,i.kt)("li",{parentName:"ul"},"and some orders may even be deleted when marked as such in the input dataset")),(0,i.kt)("p",null,"From the HR department, sellers and locations in json files :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"sellers are imported in a cumulative way while locations are imported as full content and overwrite the existing locations dataset"),(0,i.kt)("li",{parentName:"ul"},"sellers are loaded as an array of json objects"),(0,i.kt)("li",{parentName:"ul"},"locations are received in JSON format")),(0,i.kt)("h2",{id:"build-it"},"Build it"),(0,i.kt)("p",null,"Clone the project, install sbt 1.0+ and run ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt clean assembly makeSite"),". This will create :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"the assembly in the ",(0,i.kt)("inlineCode",{parentName:"li"},"target/scala-2.12")," directory"),(0,i.kt)("li",{parentName:"ul"},"This site documentation in ",(0,i.kt)("inlineCode",{parentName:"li"},"/target/sphinx/html")),(0,i.kt)("li",{parentName:"ul"},"The Scala source code documentation in ",(0,i.kt)("inlineCode",{parentName:"li"},"target/scala-2.12/api"))),(0,i.kt)("h2",{id:"run-it"},"Run it"),(0,i.kt)("p",null,"To run the quickstart on a local filesystem, simply copy the content of the quickstart directory to your /tmp directory.\nThis will create the ",(0,i.kt)("inlineCode",{parentName:"p"},"/tmp/metadata")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"/tmp/incoming")," folders."),(0,i.kt)("p",null,"Import the datasets into the cluster using spark-submit :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$SPARK_HOME/bin/spark-submit target/scala-2.12/comet-assembly-VERSION.jar import\n")),(0,i.kt)("p",null,"This will put the datasets in the ",(0,i.kt)("inlineCode",{parentName:"p"},"/tmp/datasets/pending/")," folder. In real life, this will be a HDFS or CLoud Srorage folder."),(0,i.kt)("p",null,"Run the ingestion process as follows :"),(0,i.kt)("p",null,".. code-block:: console"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$SPARK_HOME/bin/spark-submit target/scala-2.12/comet-assembly-VERSION.jar watch\n")),(0,i.kt)("p",null,"This will ingest the four datasets of the two domains (hr & sales) and store them as parquet files into the folders:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"/tmp/datasets/accepted for valid records"),(0,i.kt)("li",{parentName:"ul"},"/tmp/datasets/rejected for invalid records"),(0,i.kt)("li",{parentName:"ul"},"/tmp/datasets/unresolved for unrecognized files")),(0,i.kt)("p",null,"When run on top of HDFS, these datasets are also available as Hive tables."))}p.isMDXComponent=!0}}]);